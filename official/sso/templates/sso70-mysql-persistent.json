{
    "labels": {
        "template": "sso70-mysql-persistent",
        "xpaas": "1.3.2"
    },
    "metadata": {
        "annotations": {
            "description": "Application template for SSO 7.0 MySQL applications with persistent storage",
            "iconClass": "icon-jboss",
            "version": "1.3.2",
            "tags": "sso,keycloak,mysql,java,database,jboss,xpaas"
        },
        "name": "sso70-mysql-persistent"
    },
    "objects": [
        {
            "spec": {
                "ports": [
                    {
                        "targetPort": 8080,
                        "port": 8080
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "annotations": {
                    "description": "The web server's http port."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            }
        },
        {
            "spec": {
                "ports": [
                    {
                        "targetPort": 8443,
                        "port": 8443
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "annotations": {
                    "description": "The web server's https port."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "secure-${APPLICATION_NAME}"
            }
        },
        {
            "spec": {
                "ports": [
                    {
                        "targetPort": 3306,
                        "port": 3306
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-mysql"
                }
            },
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "annotations": {
                    "description": "The database server's port."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-mysql"
            }
        },
        {
            "id": "${APPLICATION_NAME}-http",
            "kind": "Route",
            "apiVersion": "v1",
            "metadata": {
                "annotations": {
                    "description": "Route for application's http service."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "host": "${HOSTNAME_HTTP}",
                "to": {
                    "name": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "id": "${APPLICATION_NAME}-https",
            "kind": "Route",
            "apiVersion": "v1",
            "metadata": {
                "annotations": {
                    "description": "Route for application's https service."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "secure-${APPLICATION_NAME}"
            },
            "spec": {
                "host": "${HOSTNAME_HTTPS}",
                "to": {
                    "name": "secure-${APPLICATION_NAME}"
                },
                "tls": {
                    "termination": "passthrough"
                }
            }
        },
        {
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "from": {
                                "namespace": "${IMAGE_STREAM_NAMESPACE}",
                                "kind": "ImageStreamTag",
                                "name": "redhat-sso70-openshift:1.3"
                            },
                            "containerNames": [
                                "${APPLICATION_NAME}"
                            ],
                            "automatic": true
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "template": {
                    "spec": {
                        "terminationGracePeriodSeconds": 75,
                        "serviceAccountName": "${SERVICE_ACCOUNT_NAME}",
                        "containers": [
                            {
                                "ports": [
                                    {
                                        "protocol": "TCP",
                                        "name": "jolokia",
                                        "containerPort": 8778
                                    },
                                    {
                                        "protocol": "TCP",
                                        "name": "http",
                                        "containerPort": 8080
                                    },
                                    {
                                        "protocol": "TCP",
                                        "name": "https",
                                        "containerPort": 8443
                                    },
                                    {
                                        "protocol": "TCP",
                                        "name": "ping",
                                        "containerPort": 8888
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/eap/bin/readinessProbe.sh"
                                        ]
                                    }
                                },
                                "name": "${APPLICATION_NAME}",
                                "image": "${APPLICATION_NAME}",
                                "env": [
                                    {
                                        "value": "${APPLICATION_NAME}-mysql=DB",
                                        "name": "DB_SERVICE_PREFIX_MAPPING"
                                    },
                                    {
                                        "value": "${DB_JNDI}",
                                        "name": "DB_JNDI"
                                    },
                                    {
                                        "value": "${DB_USERNAME}",
                                        "name": "DB_USERNAME"
                                    },
                                    {
                                        "value": "${DB_PASSWORD}",
                                        "name": "DB_PASSWORD"
                                    },
                                    {
                                        "value": "${DB_DATABASE}",
                                        "name": "DB_DATABASE"
                                    },
                                    {
                                        "value": "${APPLICATION_NAME}-mysql=DB",
                                        "name": "TX_DATABASE_PREFIX_MAPPING"
                                    },
                                    {
                                        "value": "${DB_MIN_POOL_SIZE}",
                                        "name": "DB_MIN_POOL_SIZE"
                                    },
                                    {
                                        "value": "${DB_MAX_POOL_SIZE}",
                                        "name": "DB_MAX_POOL_SIZE"
                                    },
                                    {
                                        "value": "${DB_TX_ISOLATION}",
                                        "name": "DB_TX_ISOLATION"
                                    },
                                    {
                                        "value": "application=${APPLICATION_NAME}",
                                        "name": "OPENSHIFT_KUBE_PING_LABELS"
                                    },
                                    {
                                        "valueFrom": {
                                            "fieldRef": {
                                                "fieldPath": "metadata.namespace"
                                            }
                                        },
                                        "name": "OPENSHIFT_KUBE_PING_NAMESPACE"
                                    },
                                    {
                                        "value": "/etc/eap-secret-volume",
                                        "name": "HTTPS_KEYSTORE_DIR"
                                    },
                                    {
                                        "value": "${HTTPS_KEYSTORE}",
                                        "name": "HTTPS_KEYSTORE"
                                    },
                                    {
                                        "value": "${HTTPS_KEYSTORE_TYPE}",
                                        "name": "HTTPS_KEYSTORE_TYPE"
                                    },
                                    {
                                        "value": "${HTTPS_NAME}",
                                        "name": "HTTPS_NAME"
                                    },
                                    {
                                        "value": "${HTTPS_PASSWORD}",
                                        "name": "HTTPS_PASSWORD"
                                    },
                                    {
                                        "value": "${JGROUPS_ENCRYPT_SECRET}",
                                        "name": "JGROUPS_ENCRYPT_SECRET"
                                    },
                                    {
                                        "value": "/etc/jgroups-encrypt-secret-volume",
                                        "name": "JGROUPS_ENCRYPT_KEYSTORE_DIR"
                                    },
                                    {
                                        "value": "${JGROUPS_ENCRYPT_KEYSTORE}",
                                        "name": "JGROUPS_ENCRYPT_KEYSTORE"
                                    },
                                    {
                                        "value": "${JGROUPS_ENCRYPT_NAME}",
                                        "name": "JGROUPS_ENCRYPT_NAME"
                                    },
                                    {
                                        "value": "${JGROUPS_ENCRYPT_PASSWORD}",
                                        "name": "JGROUPS_ENCRYPT_PASSWORD"
                                    },
                                    {
                                        "value": "${JGROUPS_CLUSTER_PASSWORD}",
                                        "name": "JGROUPS_CLUSTER_PASSWORD"
                                    },
                                    {
                                        "value": "${SSO_ADMIN_USERNAME}",
                                        "name": "SSO_ADMIN_USERNAME"
                                    },
                                    {
                                        "value": "${SSO_ADMIN_PASSWORD}",
                                        "name": "SSO_ADMIN_PASSWORD"
                                    },
                                    {
                                        "value": "${SSO_REALM}",
                                        "name": "SSO_REALM"
                                    },
                                    {
                                        "value": "${SSO_SERVICE_USERNAME}",
                                        "name": "SSO_SERVICE_USERNAME"
                                    },
                                    {
                                        "value": "${SSO_SERVICE_PASSWORD}",
                                        "name": "SSO_SERVICE_PASSWORD"
                                    },
                                    {
                                        "value": "${SSO_TRUSTSTORE}",
                                        "name": "SSO_TRUSTSTORE"
                                    },
                                    {
                                        "value": "/etc/sso-secret-volume",
                                        "name": "SSO_TRUSTSTORE_DIR"
                                    },
                                    {
                                        "value": "${SSO_TRUSTSTORE_PASSWORD}",
                                        "name": "SSO_TRUSTSTORE_PASSWORD"
                                    }
                                ],
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/opt/eap/bin/jboss-cli.sh",
                                                "-c",
                                                ":shutdown(timeout=60)"
                                            ]
                                        }
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "readOnly": true,
                                        "mountPath": "/etc/eap-secret-volume",
                                        "name": "eap-keystore-volume"
                                    },
                                    {
                                        "readOnly": true,
                                        "mountPath": "/etc/jgroups-encrypt-secret-volume",
                                        "name": "eap-jgroups-keystore-volume"
                                    },
                                    {
                                        "readOnly": true,
                                        "mountPath": "/etc/sso-secret-volume",
                                        "name": "sso-truststore-volume"
                                    }
                                ],
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/eap/bin/livenessProbe.sh"
                                        ]
                                    }
                                }
                            }
                        ],
                        "volumes": [
                            {
                                "secret": {
                                    "secretName": "${HTTPS_SECRET}"
                                },
                                "name": "eap-keystore-volume"
                            },
                            {
                                "secret": {
                                    "secretName": "${JGROUPS_ENCRYPT_SECRET}"
                                },
                                "name": "eap-jgroups-keystore-volume"
                            },
                            {
                                "secret": {
                                    "secretName": "${SSO_TRUSTSTORE_SECRET}"
                                },
                                "name": "sso-truststore-volume"
                            }
                        ]
                    },
                    "metadata": {
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}",
                            "application": "${APPLICATION_NAME}"
                        },
                        "name": "${APPLICATION_NAME}"
                    }
                }
            },
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            }
        },
        {
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-mysql"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "from": {
                                "namespace": "${IMAGE_STREAM_NAMESPACE}",
                                "kind": "ImageStreamTag",
                                "name": "mysql:latest"
                            },
                            "containerNames": [
                                "${APPLICATION_NAME}-mysql"
                            ],
                            "automatic": true
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "template": {
                    "spec": {
                        "terminationGracePeriodSeconds": 60,
                        "containers": [
                            {
                                "ports": [
                                    {
                                        "protocol": "TCP",
                                        "containerPort": 3306
                                    }
                                ],
                                "image": "mysql",
                                "env": [
                                    {
                                        "value": "${DB_USERNAME}",
                                        "name": "MYSQL_USER"
                                    },
                                    {
                                        "value": "${DB_PASSWORD}",
                                        "name": "MYSQL_PASSWORD"
                                    },
                                    {
                                        "value": "${DB_DATABASE}",
                                        "name": "MYSQL_DATABASE"
                                    },
                                    {
                                        "value": "${MYSQL_LOWER_CASE_TABLE_NAMES}",
                                        "name": "MYSQL_LOWER_CASE_TABLE_NAMES"
                                    },
                                    {
                                        "value": "${MYSQL_MAX_CONNECTIONS}",
                                        "name": "MYSQL_MAX_CONNECTIONS"
                                    },
                                    {
                                        "value": "${MYSQL_FT_MIN_WORD_LEN}",
                                        "name": "MYSQL_FT_MIN_WORD_LEN"
                                    },
                                    {
                                        "value": "${MYSQL_FT_MAX_WORD_LEN}",
                                        "name": "MYSQL_FT_MAX_WORD_LEN"
                                    },
                                    {
                                        "value": "${MYSQL_AIO}",
                                        "name": "MYSQL_AIO"
                                    }
                                ],
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/mysql/data",
                                        "name": "${APPLICATION_NAME}-mysql-pvol"
                                    }
                                ],
                                "imagePullPolicy": "Always",
                                "name": "${APPLICATION_NAME}-mysql"
                            }
                        ],
                        "volumes": [
                            {
                                "persistentVolumeClaim": {
                                    "claimName": "${APPLICATION_NAME}-mysql-claim"
                                },
                                "name": "${APPLICATION_NAME}-mysql-pvol"
                            }
                        ]
                    },
                    "metadata": {
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}-mysql",
                            "application": "${APPLICATION_NAME}"
                        },
                        "name": "${APPLICATION_NAME}-mysql"
                    }
                }
            },
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-mysql"
            }
        },
        {
            "spec": {
                "accessModes": [
                    "ReadWriteOnce"
                ],
                "resources": {
                    "requests": {
                        "storage": "${VOLUME_CAPACITY}"
                    }
                }
            },
            "kind": "PersistentVolumeClaim",
            "apiVersion": "v1",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-mysql-claim"
            }
        }
    ],
    "kind": "Template",
    "apiVersion": "v1",
    "parameters": [
        {
            "description": "The name for the application.",
            "value": "sso",
            "required": true,
            "name": "APPLICATION_NAME"
        },
        {
            "description": "Custom hostname for http service route.  Leave blank for default hostname, e.g.: <application-name>.<project>.<default-domain-suffix>",
            "value": "",
            "required": false,
            "name": "HOSTNAME_HTTP"
        },
        {
            "description": "Custom hostname for https service route.  Leave blank for default hostname, e.g.: <application-name>.<project>.<default-domain-suffix>",
            "value": "",
            "required": false,
            "name": "HOSTNAME_HTTPS"
        },
        {
            "description": "Database JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mysql",
            "value": "java:jboss/datasources/KeycloakDS",
            "required": false,
            "name": "DB_JNDI"
        },
        {
            "description": "Database name",
            "value": "root",
            "required": true,
            "name": "DB_DATABASE"
        },
        {
            "description": "The name of the service account to use for the deployment.  The service account should be configured to allow useage of the secret(s) specified by HTTPS_SECRET and JGROUPS_ENCRYPT_SECRET.",
            "value": "sso-service-account",
            "required": true,
            "name": "SERVICE_ACCOUNT_NAME"
        },
        {
            "description": "The name of the secret containing the keystore file",
            "value": "sso-app-secret",
            "required": false,
            "name": "HTTPS_SECRET"
        },
        {
            "description": "The name of the keystore file within the secret",
            "value": "keystore.jks",
            "required": false,
            "name": "HTTPS_KEYSTORE"
        },
        {
            "description": "The type of the keystore file (JKS or JCEKS)",
            "value": "",
            "required": false,
            "name": "HTTPS_KEYSTORE_TYPE"
        },
        {
            "description": "The name associated with the server certificate (e.g. jboss)",
            "value": "",
            "required": false,
            "name": "HTTPS_NAME"
        },
        {
            "description": "The password for the keystore and certificate (e.g. mykeystorepass)",
            "value": "",
            "required": false,
            "name": "HTTPS_PASSWORD"
        },
        {
            "description": "Sets xa-pool/min-pool-size for the configured datasource.",
            "required": false,
            "name": "DB_MIN_POOL_SIZE"
        },
        {
            "description": "Sets xa-pool/max-pool-size for the configured datasource.",
            "required": false,
            "name": "DB_MAX_POOL_SIZE"
        },
        {
            "description": "Sets transaction-isolation for the configured datasource.",
            "required": false,
            "name": "DB_TX_ISOLATION"
        },
        {
            "description": "Sets how the table names are stored and compared.",
            "required": false,
            "name": "MYSQL_LOWER_CASE_TABLE_NAMES"
        },
        {
            "description": "The maximum permitted number of simultaneous client connections.",
            "required": false,
            "name": "MYSQL_MAX_CONNECTIONS"
        },
        {
            "description": "The minimum length of the word to be included in a FULLTEXT index.",
            "required": false,
            "name": "MYSQL_FT_MIN_WORD_LEN"
        },
        {
            "description": "The maximum length of the word to be included in a FULLTEXT index.",
            "required": false,
            "name": "MYSQL_FT_MAX_WORD_LEN"
        },
        {
            "description": "Controls the innodb_use_native_aio setting value if the native AIO is broken.",
            "required": false,
            "name": "MYSQL_AIO"
        },
        {
            "from": "user[a-zA-Z0-9]{3}",
            "description": "Database user name",
            "required": true,
            "generate": "expression",
            "name": "DB_USERNAME"
        },
        {
            "from": "[a-zA-Z0-9]{8}",
            "description": "Database user password",
            "required": true,
            "generate": "expression",
            "name": "DB_PASSWORD"
        },
        {
            "description": "Size of persistent storage for database volume.",
            "value": "512Mi",
            "required": true,
            "name": "VOLUME_CAPACITY"
        },
        {
            "description": "The name of the secret containing the keystore file",
            "value": "sso-app-secret",
            "required": false,
            "name": "JGROUPS_ENCRYPT_SECRET"
        },
        {
            "description": "The name of the keystore file within the secret",
            "value": "jgroups.jceks",
            "required": false,
            "name": "JGROUPS_ENCRYPT_KEYSTORE"
        },
        {
            "description": "The name associated with the server certificate (e.g. secret-key)",
            "value": "",
            "required": false,
            "name": "JGROUPS_ENCRYPT_NAME"
        },
        {
            "description": "The password for the keystore and certificate (e.g. password)",
            "value": "",
            "required": false,
            "name": "JGROUPS_ENCRYPT_PASSWORD"
        },
        {
            "from": "[a-zA-Z0-9]{8}",
            "description": "JGroups cluster password",
            "required": true,
            "generate": "expression",
            "name": "JGROUPS_CLUSTER_PASSWORD"
        },
        {
            "description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
            "value": "openshift",
            "required": true,
            "name": "IMAGE_STREAM_NAMESPACE"
        },
        {
            "description": "SSO Server admin username",
            "value": "admin",
            "required": false,
            "name": "SSO_ADMIN_USERNAME"
        },
        {
            "description": "SSO Server admin  password",
            "value": "admin",
            "required": false,
            "name": "SSO_ADMIN_PASSWORD"
        },
        {
            "description": "Realm to be created in the SSO server (e.g. demo).",
            "value": "",
            "required": false,
            "name": "SSO_REALM"
        },
        {
            "description": "The username used to access the SSO service.  This is used by clients to create the appliction client(s) within the specified SSO realm.",
            "value": "",
            "required": false,
            "name": "SSO_SERVICE_USERNAME"
        },
        {
            "description": "The password for the SSO service user.",
            "value": "",
            "required": false,
            "name": "SSO_SERVICE_PASSWORD"
        },
        {
            "description": "The name of the truststore file within the secret (e.g. truststore.jks)",
            "value": "",
            "required": false,
            "name": "SSO_TRUSTSTORE"
        },
        {
            "description": "The password for the truststore and certificate (e.g. mykeystorepass)",
            "value": "",
            "required": false,
            "name": "SSO_TRUSTSTORE_PASSWORD"
        },
        {
            "description": "The name of the secret containing the truststore file (e.g. truststore-secret). Used for volume secretName",
            "value": "sso-app-secret",
            "required": false,
            "name": "SSO_TRUSTSTORE_SECRET"
        }
    ]
}