{
    "labels": {
        "template": "eap64-sso-s2i",
        "xpaas": "1.3.2"
    },
    "metadata": {
        "annotations": {
            "description": "Application template for EAP 6 applications built using S2I, enabled for SSO.",
            "iconClass": "icon-jboss",
            "version": "1.3.2",
            "tags": "eap,javaee,java,jboss,xpaas,sso,keycloak"
        },
        "name": "eap64-sso-s2i"
    },
    "objects": [
        {
            "spec": {
                "ports": [
                    {
                        "targetPort": 8080,
                        "port": 8080
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "annotations": {
                    "description": "The web server's http port."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            }
        },
        {
            "spec": {
                "ports": [
                    {
                        "targetPort": 8443,
                        "port": 8443
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            },
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "annotations": {
                    "description": "The web server's https port."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "secure-${APPLICATION_NAME}"
            }
        },
        {
            "id": "${APPLICATION_NAME}-http",
            "kind": "Route",
            "apiVersion": "v1",
            "metadata": {
                "annotations": {
                    "description": "Route for application's http service."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "host": "${HOSTNAME_HTTP}",
                "to": {
                    "name": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "id": "${APPLICATION_NAME}-https",
            "kind": "Route",
            "apiVersion": "v1",
            "metadata": {
                "annotations": {
                    "description": "Route for application's https service."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "secure-${APPLICATION_NAME}"
            },
            "spec": {
                "host": "${HOSTNAME_HTTPS}",
                "to": {
                    "name": "secure-${APPLICATION_NAME}"
                },
                "tls": {
                    "termination": "passthrough"
                }
            }
        },
        {
            "kind": "ImageStream",
            "apiVersion": "v1",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            }
        },
        {
            "spec": {
                "strategy": {
                    "type": "Source",
                    "sourceStrategy": {
                        "env": [
                            {
                                "value": "${ARTIFACT_DIR}",
                                "name": "ARTIFACT_DIR"
                            },
                            {
                                "value": "",
                                "name": "MAVEN_ARGS_APPEND"
                            }
                        ],
                        "forcePull": true,
                        "from": {
                            "namespace": "${IMAGE_STREAM_NAMESPACE}",
                            "kind": "ImageStreamTag",
                            "name": "jboss-eap64-openshift:1.4"
                        }
                    }
                },
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${APPLICATION_NAME}:latest"
                    }
                },
                "source": {
                    "git": {
                        "uri": "${SOURCE_REPOSITORY_URL}",
                        "ref": "${SOURCE_REPOSITORY_REF}"
                    },
                    "contextDir": "${CONTEXT_DIR}",
                    "type": "Git"
                },
                "triggers": [
                    {
                        "type": "GitHub",
                        "github": {
                            "secret": "${GITHUB_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "type": "Generic",
                        "generic": {
                            "secret": "${GENERIC_WEBHOOK_SECRET}"
                        }
                    },
                    {
                        "imageChange": {},
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            },
            "kind": "BuildConfig",
            "apiVersion": "v1",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            }
        },
        {
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                },
                "triggers": [
                    {
                        "type": "ImageChange",
                        "imageChangeParams": {
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${APPLICATION_NAME}:latest"
                            },
                            "containerNames": [
                                "${APPLICATION_NAME}"
                            ],
                            "automatic": true
                        }
                    },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "template": {
                    "spec": {
                        "terminationGracePeriodSeconds": 60,
                        "serviceAccountName": "${SERVICE_ACCOUNT_NAME}",
                        "containers": [
                            {
                                "ports": [
                                    {
                                        "protocol": "TCP",
                                        "name": "jolokia",
                                        "containerPort": 8778
                                    },
                                    {
                                        "protocol": "TCP",
                                        "name": "http",
                                        "containerPort": 8080
                                    },
                                    {
                                        "protocol": "TCP",
                                        "name": "https",
                                        "containerPort": 8443
                                    },
                                    {
                                        "protocol": "TCP",
                                        "name": "ping",
                                        "containerPort": 8888
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/eap/bin/readinessProbe.sh"
                                        ]
                                    }
                                },
                                "image": "${APPLICATION_NAME}",
                                "env": [
                                    {
                                        "value": "application=${APPLICATION_NAME}",
                                        "name": "OPENSHIFT_KUBE_PING_LABELS"
                                    },
                                    {
                                        "valueFrom": {
                                            "fieldRef": {
                                                "fieldPath": "metadata.namespace"
                                            }
                                        },
                                        "name": "OPENSHIFT_KUBE_PING_NAMESPACE"
                                    },
                                    {
                                        "value": "${HOSTNAME_HTTP}",
                                        "name": "HOSTNAME_HTTP"
                                    },
                                    {
                                        "value": "${HOSTNAME_HTTPS}",
                                        "name": "HOSTNAME_HTTPS"
                                    },
                                    {
                                        "value": "/etc/eap-secret-volume",
                                        "name": "HTTPS_KEYSTORE_DIR"
                                    },
                                    {
                                        "value": "${HTTPS_KEYSTORE}",
                                        "name": "HTTPS_KEYSTORE"
                                    },
                                    {
                                        "value": "${HTTPS_KEYSTORE_TYPE}",
                                        "name": "HTTPS_KEYSTORE_TYPE"
                                    },
                                    {
                                        "value": "${HTTPS_NAME}",
                                        "name": "HTTPS_NAME"
                                    },
                                    {
                                        "value": "${HTTPS_PASSWORD}",
                                        "name": "HTTPS_PASSWORD"
                                    },
                                    {
                                        "value": "${HORNETQ_CLUSTER_PASSWORD}",
                                        "name": "HORNETQ_CLUSTER_PASSWORD"
                                    },
                                    {
                                        "value": "${HORNETQ_QUEUES}",
                                        "name": "HORNETQ_QUEUES"
                                    },
                                    {
                                        "value": "${HORNETQ_TOPICS}",
                                        "name": "HORNETQ_TOPICS"
                                    },
                                    {
                                        "value": "${JGROUPS_ENCRYPT_SECRET}",
                                        "name": "JGROUPS_ENCRYPT_SECRET"
                                    },
                                    {
                                        "value": "/etc/jgroups-encrypt-secret-volume",
                                        "name": "JGROUPS_ENCRYPT_KEYSTORE_DIR"
                                    },
                                    {
                                        "value": "${JGROUPS_ENCRYPT_KEYSTORE}",
                                        "name": "JGROUPS_ENCRYPT_KEYSTORE"
                                    },
                                    {
                                        "value": "${JGROUPS_ENCRYPT_NAME}",
                                        "name": "JGROUPS_ENCRYPT_NAME"
                                    },
                                    {
                                        "value": "${JGROUPS_ENCRYPT_PASSWORD}",
                                        "name": "JGROUPS_ENCRYPT_PASSWORD"
                                    },
                                    {
                                        "value": "${JGROUPS_CLUSTER_PASSWORD}",
                                        "name": "JGROUPS_CLUSTER_PASSWORD"
                                    },
                                    {
                                        "value": "${AUTO_DEPLOY_EXPLODED}",
                                        "name": "AUTO_DEPLOY_EXPLODED"
                                    },
                                    {
                                        "value": "${SSO_URL}",
                                        "name": "SSO_URL"
                                    },
                                    {
                                        "value": "${SSO_SERVICE_URL}",
                                        "name": "SSO_SERVICE_URL"
                                    },
                                    {
                                        "value": "${SSO_REALM}",
                                        "name": "SSO_REALM"
                                    },
                                    {
                                        "value": "${SSO_USERNAME}",
                                        "name": "SSO_USERNAME"
                                    },
                                    {
                                        "value": "${SSO_PASSWORD}",
                                        "name": "SSO_PASSWORD"
                                    },
                                    {
                                        "value": "${SSO_PUBLIC_KEY}",
                                        "name": "SSO_PUBLIC_KEY"
                                    },
                                    {
                                        "value": "${SSO_BEARER_ONLY}",
                                        "name": "SSO_BEARER_ONLY"
                                    },
                                    {
                                        "value": "${SSO_SAML_KEYSTORE_SECRET}",
                                        "name": "SSO_SAML_KEYSTORE_SECRET"
                                    },
                                    {
                                        "value": "${SSO_SAML_KEYSTORE}",
                                        "name": "SSO_SAML_KEYSTORE"
                                    },
                                    {
                                        "value": "/etc/sso-saml-secret-volume",
                                        "name": "SSO_SAML_KEYSTORE_DIR"
                                    },
                                    {
                                        "value": "${SSO_SAML_CERTIFICATE_NAME}",
                                        "name": "SSO_SAML_CERTIFICATE_NAME"
                                    },
                                    {
                                        "value": "${SSO_SAML_KEYSTORE_PASSWORD}",
                                        "name": "SSO_SAML_KEYSTORE_PASSWORD"
                                    },
                                    {
                                        "value": "${SSO_SECRET}",
                                        "name": "SSO_SECRET"
                                    },
                                    {
                                        "value": "${SSO_ENABLE_CORS}",
                                        "name": "SSO_ENABLE_CORS"
                                    },
                                    {
                                        "value": "${SSO_SAML_LOGOUT_PAGE}",
                                        "name": "SSO_SAML_LOGOUT_PAGE"
                                    },
                                    {
                                        "value": "${SSO_DISABLE_SSL_CERTIFICATE_VALIDATION}",
                                        "name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION"
                                    },
                                    {
                                        "value": "${SSO_TRUSTSTORE}",
                                        "name": "SSO_TRUSTSTORE"
                                    },
                                    {
                                        "value": "/etc/sso-secret-volume",
                                        "name": "SSO_TRUSTSTORE_DIR"
                                    },
                                    {
                                        "value": "${SSO_TRUSTSTORE_PASSWORD}",
                                        "name": "SSO_TRUSTSTORE_PASSWORD"
                                    }
                                ],
                                "name": "${APPLICATION_NAME}",
                                "volumeMounts": [
                                    {
                                        "readOnly": true,
                                        "mountPath": "/etc/sso-saml-secret-volume",
                                        "name": "sso-saml-keystore-volume"
                                    },
                                    {
                                        "readOnly": true,
                                        "mountPath": "/etc/eap-secret-volume",
                                        "name": "eap-keystore-volume"
                                    },
                                    {
                                        "readOnly": true,
                                        "mountPath": "/etc/jgroups-encrypt-secret-volume",
                                        "name": "eap-jgroups-keystore-volume"
                                    },
                                    {
                                        "readOnly": true,
                                        "mountPath": "/etc/sso-secret-volume",
                                        "name": "sso-truststore-volume"
                                    }
                                ],
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/eap/bin/livenessProbe.sh"
                                        ]
                                    }
                                }
                            }
                        ],
                        "volumes": [
                            {
                                "secret": {
                                    "secretName": "${SSO_SAML_KEYSTORE_SECRET}"
                                },
                                "name": "sso-saml-keystore-volume"
                            },
                            {
                                "secret": {
                                    "secretName": "${HTTPS_SECRET}"
                                },
                                "name": "eap-keystore-volume"
                            },
                            {
                                "secret": {
                                    "secretName": "${JGROUPS_ENCRYPT_SECRET}"
                                },
                                "name": "eap-jgroups-keystore-volume"
                            },
                            {
                                "secret": {
                                    "secretName": "${SSO_TRUSTSTORE_SECRET}"
                                },
                                "name": "sso-truststore-volume"
                            }
                        ]
                    },
                    "metadata": {
                        "labels": {
                            "deploymentConfig": "${APPLICATION_NAME}",
                            "application": "${APPLICATION_NAME}"
                        },
                        "name": "${APPLICATION_NAME}"
                    }
                }
            },
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            }
        }
    ],
    "kind": "Template",
    "apiVersion": "v1",
    "parameters": [
        {
            "description": "The name for the application.",
            "value": "eap-app",
            "required": true,
            "name": "APPLICATION_NAME"
        },
        {
            "description": "Hostname for http service route (e.g. eap-app-myproject.example.com).  Required for SSO-enabled applications.  This is added to the white list of redirects in the SSO server.",
            "value": "",
            "required": true,
            "name": "HOSTNAME_HTTP"
        },
        {
            "description": "Hostname for https service route (e.g. secure-eap-app-myproject.example.com).  Required for SSO-enabled applications.  This is added to the white list of redirects in the SSO server.",
            "value": "",
            "required": true,
            "name": "HOSTNAME_HTTPS"
        },
        {
            "description": "Git source URI for application",
            "value": "https://github.com/redhat-developer/redhat-sso-quickstarts",
            "required": true,
            "name": "SOURCE_REPOSITORY_URL"
        },
        {
            "description": "Git branch/tag reference",
            "value": "7.0.x-ose",
            "required": false,
            "name": "SOURCE_REPOSITORY_REF"
        },
        {
            "description": "Path within Git project to build; empty for root project directory.",
            "value": "",
            "required": false,
            "name": "CONTEXT_DIR"
        },
        {
            "description": "Queue names",
            "value": "",
            "required": false,
            "name": "HORNETQ_QUEUES"
        },
        {
            "description": "Topic names",
            "value": "",
            "required": false,
            "name": "HORNETQ_TOPICS"
        },
        {
            "description": "The name of the service account to use for the deployment.  The service account should be configured to allow useage of the secret(s) specified by HTTPS_SECRET and JGROUPS_ENCRYPT_SECRET.",
            "value": "eap-service-account",
            "required": true,
            "name": "SERVICE_ACCOUNT_NAME"
        },
        {
            "description": "The name of the secret containing the keystore file",
            "value": "eap-app-secret",
            "required": true,
            "name": "HTTPS_SECRET"
        },
        {
            "description": "The name of the keystore file within the secret",
            "value": "keystore.jks",
            "required": false,
            "name": "HTTPS_KEYSTORE"
        },
        {
            "description": "The type of the keystore file (JKS or JCEKS)",
            "value": "",
            "required": false,
            "name": "HTTPS_KEYSTORE_TYPE"
        },
        {
            "description": "The name associated with the server certificate (e.g. jboss)",
            "value": "",
            "required": false,
            "name": "HTTPS_NAME"
        },
        {
            "description": "The password for the keystore and certificate (e.g. mykeystorepass)",
            "value": "",
            "required": false,
            "name": "HTTPS_PASSWORD"
        },
        {
            "from": "[a-zA-Z0-9]{8}",
            "description": "HornetQ cluster admin password",
            "required": true,
            "generate": "expression",
            "name": "HORNETQ_CLUSTER_PASSWORD"
        },
        {
            "from": "[a-zA-Z0-9]{8}",
            "description": "GitHub trigger secret",
            "required": true,
            "generate": "expression",
            "name": "GITHUB_WEBHOOK_SECRET"
        },
        {
            "from": "[a-zA-Z0-9]{8}",
            "description": "Generic build trigger secret",
            "required": true,
            "generate": "expression",
            "name": "GENERIC_WEBHOOK_SECRET"
        },
        {
            "description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
            "value": "openshift",
            "required": true,
            "name": "IMAGE_STREAM_NAMESPACE"
        },
        {
            "description": "The name of the secret containing the keystore file",
            "value": "eap-app-secret",
            "required": false,
            "name": "JGROUPS_ENCRYPT_SECRET"
        },
        {
            "description": "The name of the keystore file within the secret",
            "value": "jgroups.jceks",
            "required": false,
            "name": "JGROUPS_ENCRYPT_KEYSTORE"
        },
        {
            "description": "The name associated with the server certificate (e.g. secret-key)",
            "value": "",
            "required": false,
            "name": "JGROUPS_ENCRYPT_NAME"
        },
        {
            "description": "The password for the keystore and certificate (e.g. password)",
            "value": "",
            "required": false,
            "name": "JGROUPS_ENCRYPT_PASSWORD"
        },
        {
            "from": "[a-zA-Z0-9]{8}",
            "description": "JGroups cluster password",
            "required": true,
            "generate": "expression",
            "name": "JGROUPS_CLUSTER_PASSWORD"
        },
        {
            "description": "Controls whether exploded deployment content should be automatically deployed",
            "value": "false",
            "required": false,
            "name": "AUTO_DEPLOY_EXPLODED"
        },
        {
            "description": "The URL for the SSO server (e.g. https://secure-sso-myproject.example.com/auth).  This is the URL through which the user will be redirected when a login or token is required by the application.",
            "value": "",
            "required": true,
            "name": "SSO_URL"
        },
        {
            "description": "The URL for the interal SSO service, where secure-sso is the kubernetes service exposed by the SSO server.  This is used to create the application client(s) (see SSO_USERNAME).  This can also be the same as SSO_URL.",
            "value": "https://secure-sso:8443/auth",
            "required": false,
            "name": "SSO_SERVICE_URL"
        },
        {
            "description": "The SSO realm to which the application client(s) should be associated (e.g. demo).",
            "value": "",
            "required": true,
            "name": "SSO_REALM"
        },
        {
            "description": "The username used to access the SSO service.  This is used to create the appliction client(s) within the specified SSO realm. This should match the SSO_SERVICE_USERNAME specified through one of the sso70-* templates.",
            "value": "",
            "required": false,
            "name": "SSO_USERNAME"
        },
        {
            "description": "The password for the SSO service user.",
            "value": "",
            "required": false,
            "name": "SSO_PASSWORD"
        },
        {
            "description": "SSO Public Key. Public key is recommended to be passed into the template to avoid man-in-the-middle security vulnerability.  This can be retrieved from the SSO server, for the specified realm.",
            "value": "",
            "required": false,
            "name": "SSO_PUBLIC_KEY"
        },
        {
            "description": "SSO Client Access Type",
            "value": "",
            "required": false,
            "name": "SSO_BEARER_ONLY"
        },
        {
            "description": "List of directories from which archives will be copied into the deployment folder.  If unspecified, all archives in /target will be copied.",
            "value": "app-jee-jsp/target,service-jee-jaxrs/target,app-profile-jee-jsp/target,app-profile-saml-jee-jsp/target",
            "required": false,
            "name": "ARTIFACT_DIR"
        },
        {
            "description": "The name of the secret containing the keystore file",
            "value": "eap-app-secret",
            "required": false,
            "name": "SSO_SAML_KEYSTORE_SECRET"
        },
        {
            "description": "The name of the keystore file within the secret",
            "value": "keystore.jks",
            "required": false,
            "name": "SSO_SAML_KEYSTORE"
        },
        {
            "description": "The name associated with the server certificate",
            "value": "jboss",
            "required": false,
            "name": "SSO_SAML_CERTIFICATE_NAME"
        },
        {
            "description": "The password for the keystore and certificate",
            "value": "mykeystorepass",
            "required": false,
            "name": "SSO_SAML_KEYSTORE_PASSWORD"
        },
        {
            "from": "[a-zA-Z0-9]{8}",
            "description": "The SSO Client Secret for Confidential Access",
            "required": true,
            "generate": "expression",
            "name": "SSO_SECRET"
        },
        {
            "description": "Enable CORS for SSO applications",
            "value": "false",
            "required": false,
            "name": "SSO_ENABLE_CORS"
        },
        {
            "description": "SSO logout page for SAML applications",
            "value": "/",
            "required": false,
            "name": "SSO_SAML_LOGOUT_PAGE"
        },
        {
            "description": "If true SSL communication between EAP and the SSO Server will be insecure (i.e. certificate validation is disabled with curl)",
            "value": "true",
            "required": false,
            "name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION"
        },
        {
            "description": "The name of the truststore file within the secret (e.g. truststore.jks)",
            "value": "",
            "required": false,
            "name": "SSO_TRUSTSTORE"
        },
        {
            "description": "The password for the truststore and certificate (e.g. mykeystorepass)",
            "value": "",
            "required": false,
            "name": "SSO_TRUSTSTORE_PASSWORD"
        },
        {
            "description": "The name of the secret containing the truststore file (e.g. truststore-secret). Used for volume secretName",
            "value": "eap-app-secret",
            "required": false,
            "name": "SSO_TRUSTSTORE_SECRET"
        }
    ]
}